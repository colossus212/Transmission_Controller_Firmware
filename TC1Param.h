 
// This parameter file is broken up with #pragma directives which tell the linker
// where to store the parameters which follow the #pragma directive.

// This is explicitely defined to the linker to that it will be possible to easily
// overwrite specific parameters using the calibration software or handset, without
// the necessity of reloading the entire firmware.  



// ****************************************************************************
// **                                                                        **
// *************************** Manufacture Space Parameters *******************
// **                                                                        **
// ****************************************************************************
// **  Only settable to personal extremely familiar with the source code     **
// ****************************************************************************
#pragma  DATA_SEG MANUFACTURE_SPACE // Put this code in it's own Flash Sector

   unsigned short VERSIONH     = 1;           // major software version number
   unsigned short VERSIONL     = 0;           // minor software version number  
  
   unsigned short  MODELH       = 1;          // major model number 1.0 => Laser TC1,  2.0 => Little Hydrostatic
   unsigned short  MODELL       = 0;          // minor model number 

   unsigned short  CNFIGH       = 1;          // major configuration 1.0 => Standard,  2.0 => Gas/LP
   unsigned short  CNFIGL       = 0;          // minor configuration

   unsigned short  VN           = 0x5443;     // default to "CT" two ascii digit vendor designator
   unsigned short  SN           = 0;          // serial number 

   unsigned short  MONTH        = 7;          // manufacturing date: month
   unsigned short  DAY          = 20;         // manufacturing date: day
   unsigned short  YEAR         = 1998;       // manufacturing date: year MSB,LSB
  


// ****************************************************************************
// **                                                                        **
// ***************************** Factory Space Parameters *********************
// **                                                                        **
// ****************************************************************************
// **  Only settable to personel extremely familiar with truck operation     **
// ****************************************************************************
#pragma  DATA_SEG FACTORY_SPACE // Put this code in it's own Flash Sector  
  
/* *****************   Pilot Pressure to PWM Duty Cycle Table  ***************/     
// Empirically determined at 150 degF oil on P6 on 10/14/99 on a moving truck 
 unsigned char PilotPWM[] = { 
 0, 2, 4, 6, 8, 11, 13, 15, 17, 19,
 21, 23, 25, 27, 29, 32, 34, 36, 38, 40,
 42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
 63, 65, 67, 69, 71, 73, 75, 77, 79, 81,
 83, 83, 84, 84, 85, 85, 85, 86, 86, 87,
 87, 87, 88, 88, 88, 89, 89, 89, 89, 90,
 90, 91, 91, 92, 92, 93, 94, 94, 95, 95,
 96, 96, 97, 97, 98, 98, 98, 99, 99, 100,
 100, 100, 101, 101, 102, 102, 102, 103, 103, 104,
 104, 104, 105, 105, 105, 106, 106, 106, 106, 107,
 107, 107, 108, 108, 108, 109, 109, 109, 109, 110,
 110, 110, 110, 111, 111, 111, 111, 111, 112, 112,
 112, 112, 113, 113, 114, 114, 114, 115, 115, 116,
 116, 116, 117, 117, 117, 118, 118, 118, 118, 119,
 119, 119, 120, 120, 121, 121, 121, 122, 122, 123,
 123, 123, 124, 124, 124, 125, 125, 125, 126, 126,
 126, 127, 127, 127, 128, 128, 128, 129, 129, 129,
 130, 130, 130, 131, 131, 132, 132, 132, 133, 133,
 133, 134, 134, 134, 135, 135, 135, 136, 136, 136,
 137, 137, 137, 138, 138, 138, 139, 139, 139, 140,
 140, 140, 141, 141, 141, 141, 142, 142, 142, 143,
 143, 143, 143, 144, 144, 144, 145, 145, 145, 146,
 146, 146, 146, 147, 147, 147, 148, 148, 148, 148,
 149, 149, 149, 150, 150, 150, 150, 151, 151, 151,
 152, 152, 152, 152, 153, 153, 153, 154, 154, 154,
 155, 155, 155, 155, 156, 156, 156, 157, 157, 157,
 157, 158, 158, 158, 159, 159, 159, 159, 160, 160,
 160, 161, 161, 161, 161, 162, 162, 162, 163, 163,
 163, 163, 164, 164, 164, 165, 165, 165, 166, 166,
 166, 166, 167, 167, 167, 168, 168, 168, 168, 169,
 169, 169, 170, 170, 170, 170, 171, 171, 171, 172,
 172, 172, 172, 173, 173, 173, 173, 174, 174, 174,
 175, 175, 175, 175, 176, 176, 176, 177, 177, 177,
 177, 178, 178, 178, 179, 179, 179, 179, 180, 180,
 180, 180, 181, 181, 181, 182, 182, 182, 182, 183,
 183, 183, 184, 184, 184, 184, 185, 185, 185, 186,
 186, 186, 186, 187, 187, 187, 187, 188, 188, 188,
 189, 189, 189, 189, 190, 190, 190, 191, 191, 191,
 191, 192, 192, 192, 193, 193, 193, 193, 194, 194,
 194, 194, 195, 195, 195, 196, 196, 196, 196, 197,
 197, 197, 198, 198, 198, 199, 199, 199, 200, 200,
 200, 201, 201, 201, 202, 202, 202, 203, 203, 203,
 204, 204, 204, 205, 205, 205, 206, 206, 206, 207,
 207, 207, 208, 208, 208, 209, 209, 209, 210, 210,
 210, 211, 211, 211, 212, 212, 212, 213, 213, 213,
 214, 214, 214, 215, 215, 215, 216, 216, 216, 217,
 217, 217, 218, 218, 218, 219, 219, 219, 220, 220,
 220, 221, 221, 221, 222, 222, 222, 223, 223, 223,
 224, 224, 224, 225, 225, 226, 226, 226, 227, 227,
 227, 228, 228, 229, 229, 229, 230, 230, 230, 231,
 231, 231, 232, 232, 233, 233, 233, 234, 234, 234,
 235, 235, 235, 236, 236, 237, 237, 237, 238, 238,
 238, 239, 239, 240, 240, 240, 241, 241, 241, 242,
 242, 243, 243, 243, 244, 244, 245, 245, 245, 246,
 246, 247, 247, 247, 248, 248, 248, 249, 249, 250,
 250, 250, 251, 251, 252, 252, 252, 253, 253, 254,
 254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
 254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
 255};


// ****************************************************************************
// **                                                                        **
// ***************************** Dealer Space Parameters **********************
// **                                                                        **
// ****************************************************************************
// **  Only settable to personal familiar with truck operations              **
// ****************************************************************************
#pragma  DATA_SEG DEALER_SPACE // Put this code in it's own Flash Sector    


 // **** Temperature Alarm and Shutdown Points ****
 unsigned short TEMPLO_POINT     = 40;   // Loop Temp which causes UnderTemp light
 unsigned short TEMPHI_POINT     = 205;  // Loop Temp which causes OverTemp light
 unsigned short TEMPHIHI_POINT   = 220;  // Loop Temp which causes 30 sec run-timer to begin

 unsigned short TempPilot0       = 540; // pressure to limit pilot to, if temp is ok 
 unsigned short OverTemperature1 = 210; // temperature to go to next pilot
 unsigned short OverTempPilot1   = 230; // pressure to limit pilot to, if temp is over OverTemperature1

 unsigned short OverTemperature2 = 215; // temperature to go to next pilot
 unsigned short OverTempPilot2   = 150; // pressure to limit pilot to, if temp is over OverTemperature2
 
 
 // **** Overspeed Control Points ****
 unsigned short OVERSPEED_POINT1 = 2700;  // RPM to open retard solenoid because of overspeed
 unsigned short OVERSPEED_POINT2 = 3100;  // RPM to cut off engine
 unsigned short OVERSPEED_POINT3 = 2200;  // 2300 RPM to close retard solenoid after an overspeed

 
 // **** Limp Home Mode ****
 unsigned short LimpHomePilot = 150; // Max Pilot Press when in Limp Home Mode



 // **** Misc. Parameters ****
 unsigned short  FULLGOVSPD   = 2200; // Max Governed Speed of Engine
 unsigned short  DEADTHRES    = 400;  // Engine is considered dead if below this RPM 
 unsigned short  PULSESPERREV = 45;   // Pulses per Revolution of the flywheel

 unsigned short  MAXSOLCRNT   = 2700; // maximum mA allowed through F/R solenoids b4 error
 unsigned short  MAXTHRCRNT   = 8500; // maximum mA allowed through Throttle PWM b4 error
 


/* **********************   Pilot Pressure Control Curves  ********************/     

 unsigned short BasePilot[] = { 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 4, 7, 11, 14, 18, 21, 25, 28, 32,
 35, 39, 42, 46, 49, 53, 56, 60, 63, 67,
 70, 73, 76, 79, 82, 85, 88, 91, 94, 98,
 101, 104, 107, 110, 113, 116, 119, 122, 125, 127,
 129, 131, 134, 136, 138, 140, 142, 145, 147, 150,
 152, 154, 157, 159, 162, 164, 166, 169, 171, 174,
 176, 178, 181, 183, 186, 188, 190, 193, 195, 198,
 200, 203, 206, 210, 213, 216, 219, 222, 225, 229,
 232, 235, 238, 241, 244, 248, 251, 254, 257, 260,
 263, 267, 270, 273, 276, 279, 282, 286, 289, 292,
 295, 299, 303, 308, 312, 316, 320, 324, 329, 333,
 337, 341, 345, 350, 354, 358, 362, 366, 371, 375,
 379, 383, 387, 392, 396, 400, 405, 411, 416, 421,
 427, 432, 437, 443, 448, 453, 459, 464, 469, 475,
 480, 486, 492, 498, 504, 510, 516, 522, 528, 534,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 531, 522, 513, 504, 495, 486, 477, 468, 459,
 450, 441, 432, 423, 414, 405, 396, 387, 378, 369,
 360, 351, 342, 333, 324, 315, 306, 297, 288, 279,
 270, 261, 252, 243, 234, 225, 216, 207, 198, 189,
 180, 171, 162, 153, 144, 135, 126, 117, 108, 99,
 90, 81, 72, 63, 54, 45, 36, 27, 18, 9,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0};


 // unsigned short RetardBasePilot[] is used when retard valve is open
 // to insure smoother PowerReversals
 unsigned short RetardBasePilot[] = { 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 4, 7, 11, 14, 18, 21, 25, 28, 32,
 35, 39, 42, 46, 49, 53, 56, 60, 63, 67,
 70, 73, 76, 79, 82, 85, 88, 91, 94, 98,
 101, 104, 107, 110, 113, 116, 119, 122, 125, 127,
 129, 131, 134, 136, 138, 140, 142, 145, 147, 150,
 152, 154, 157, 159, 162, 164, 166, 169, 171, 174,
 176, 178, 181, 183, 186, 188, 190, 193, 195, 198,
 200, 203, 206, 210, 213, 216, 219, 222, 225, 229,
 232, 235, 238, 241, 244, 248, 251, 254, 257, 260,
 263, 267, 270, 273, 276, 279, 282, 286, 289, 292,
 295, 299, 303, 308, 312, 316, 320, 324, 329, 333,
 337, 341, 345, 350, 354, 358, 362, 366, 371, 375,
 379, 383, 387, 392, 396, 400, 405, 411, 416, 421,
 427, 432, 437, 443, 448, 453, 459, 464, 469, 475,
 480, 486, 492, 498, 504, 510, 516, 522, 528, 534,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 534, 528, 522, 516, 510, 504, 498, 492, 486,
 480, 474, 468, 462, 456, 450, 444, 438, 432, 426,
 420, 414, 408, 402, 396, 390, 384, 378, 372, 366,
 360, 354, 348, 342, 336, 330, 324, 318, 312, 306,
 300, 294, 288, 282, 276, 270, 264, 258, 252, 246,
 240, 234, 228, 222, 216, 210, 204, 198, 192, 186,
 180, 174, 168, 162, 156, 150, 144, 138, 132, 126,
 120, 114, 108, 102, 96, 90, 84, 78, 72, 66,
 60, 54, 48, 42, 36, 30, 24, 18, 12, 6,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0};


 unsigned short AccelRefPilot[] = { 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 2, 4, 6, 8, 10, 12, 14, 16, 18,
 20, 22, 24, 26, 28, 30, 32, 34, 36, 38,
 40, 42, 44, 46, 48, 50, 52, 54, 56, 58,
 60, 62, 64, 66, 68, 70, 72, 74, 76, 78,
 80, 82, 84, 86, 88, 90, 92, 94, 96, 98,
 100, 102, 104, 106, 108, 110, 112, 114, 116, 118,
 120, 128, 136, 144, 152, 160, 168, 176, 184, 192,
 200, 202, 203, 205, 207, 208, 210, 212, 213, 215,
 217, 218, 220, 222, 223, 225, 227, 228, 230, 232,
 233, 235, 237, 238, 240, 242, 243, 245, 247, 248,
 250, 253, 256, 258, 261, 264, 267, 270, 272, 275,
 278, 281, 284, 286, 289, 292, 295, 298, 300, 303,
 306, 309, 312, 314, 317, 320, 327, 335, 342, 349,
 357, 364, 371, 379, 386, 393, 401, 408, 415, 423,
 430, 441, 452, 463, 474, 485, 496, 507, 518, 529,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540};



 unsigned short BrakePilot[] = { 
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 512, 484, 456, 428, 400, 393, 387, 380, 373,
 367, 360, 353, 347, 340, 333, 327, 320, 313, 307,
 300, 297, 294, 290, 287, 284, 281, 278, 274, 271,
 268, 265, 262, 258, 255, 252, 249, 246, 242, 239,
 236, 233, 230, 226, 223, 220, 219, 217, 216, 215,
 214, 212, 211, 210, 208, 207, 206, 205, 203, 202,
 201, 199, 198, 197, 196, 194, 193, 192, 190, 189,
 188, 187, 185, 184, 183, 181, 180, 179, 178, 176,
 175, 175, 175, 174, 174, 174, 174, 173, 173, 173,
 173, 172, 172, 172, 172, 172, 171, 171, 171, 171,
 170, 170, 170, 170, 170, 169, 169, 169, 169, 168,
 168, 168, 168, 167, 167, 167, 167, 167, 166, 166,
 166, 166, 165, 165, 165, 165, 164, 164, 164, 164,
 164, 163, 163, 163, 163, 162, 162, 162, 162, 161,
 161, 161, 161, 161, 160, 160, 160, 160, 159, 159,
 159, 159, 159, 158, 158, 158, 158, 157, 157, 157,
 157, 156, 156, 156, 156, 156, 155, 155, 155, 155,
 154, 154, 154, 154, 153, 153, 153, 153, 153, 152,
 152, 152, 152, 151, 151, 151, 151, 150, 150, 150,
 150, 150, 149, 149, 149, 149, 148, 148, 148, 148,
 148, 147, 147, 147, 147, 146, 146, 146, 146, 145,
 145, 145, 145, 145, 144, 144, 144, 144, 143, 143,
 143, 143, 142, 142, 142, 142, 142, 141, 141, 141,
 141, 140, 140, 140, 140, 139, 139, 139, 139, 139,
 138, 138, 138, 138, 137, 137, 137, 137, 137, 136,
 136, 136, 136, 135, 135, 135, 135, 134, 134, 134,
 134, 134, 133, 133, 133, 133, 132, 132, 132, 132,
 131, 131, 131, 131, 131, 130, 130, 130, 130, 129,
 129, 129, 129, 128, 128, 128, 128, 128, 127, 127,
 127, 127, 126, 126, 126, 126, 126, 125, 125, 125,
 125, 124, 124, 124, 124, 123, 123, 123, 123, 123,
 122, 122, 122, 122, 121, 121, 121, 121, 120, 120,
 120, 120, 119, 119, 118, 118, 118, 117, 117, 116,
 116, 116, 115, 115, 114, 114, 114, 113, 113, 112,
 112, 112, 111, 111, 110, 110, 110, 109, 109, 108,
 108, 108, 107, 107, 106, 106, 106, 105, 105, 104,
 104, 104, 103, 103, 102, 102, 102, 101, 101, 100,
 100, 100, 99, 99, 98, 98, 98, 97, 97, 96,
 96, 96, 95, 95, 94, 94, 94, 93, 93, 92,
 92, 92, 91, 91, 90, 90, 90, 89, 89, 88,
 88, 88, 87, 87, 86, 86, 86, 85, 85, 84,
 84, 84, 83, 83, 82, 82, 82, 81, 81, 80,
 80, 80, 79, 79, 78, 78, 78, 77, 77, 76,
 76, 76, 75, 75, 74, 74, 74, 73, 73, 72,
 72, 72, 71, 71, 70, 70, 70, 69, 69, 68,
 68, 68, 67, 67, 66, 66, 66, 65, 65, 64,
 64, 64, 63, 63, 62, 62, 62, 61, 61, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
 60};

 
 unsigned short Threshold[] = { 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 8,
 17, 25, 33, 41, 50, 58, 59, 60, 62, 63,
 64, 65, 66, 68, 69, 70, 71, 72, 74, 75,
 76, 77, 78, 80, 81, 82, 83, 84, 86, 87,
 88, 90, 91, 93, 95, 96, 98, 100, 101, 103,
 105, 106, 108, 110, 111, 113, 115, 116, 118, 120,
 121, 123, 125, 126, 128, 130, 131, 133, 135, 136,
 138, 141, 144, 146, 149, 152, 155, 158, 160, 163,
 166, 169, 172, 174, 177, 180, 183, 186, 188, 191,
 194, 197, 200, 202, 205, 208, 217, 226, 235, 244,
 253, 262, 271, 279, 288, 297, 306, 315, 324, 333,
 342, 362, 382, 401, 421, 441, 461, 481, 500, 520,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
 540};


  
 unsigned short CompensatedPilot[] = { 
 0, 1, 2, 2, 3, 4, 5, 6, 6, 7,
 8, 9, 10, 11, 11, 12, 13, 14, 15, 15,
 16, 17, 18, 19, 19, 20, 21, 22, 23, 24,
 24, 25, 26, 27, 28, 28, 29, 30, 31, 32,
 32, 33, 34, 35, 36, 36, 37, 38, 39, 40,
 41, 41, 42, 43, 44, 45, 45, 46, 47, 48,
 49, 49, 50, 51, 52, 53, 54, 54, 55, 56,
 57, 58, 58, 59, 60, 60, 61, 61, 62, 62,
 62, 63, 63, 63, 64, 64, 65, 65, 65, 66,
 66, 67, 67, 67, 68, 68, 68, 69, 69, 70,
 70, 70, 71, 71, 71, 71, 72, 72, 72, 72,
 73, 73, 73, 73, 74, 74, 74, 74, 75, 75,
 75, 75, 76, 76, 76, 77, 77, 77, 78, 78,
 78, 79, 79, 79, 80, 80, 80, 81, 81, 81,
 82, 82, 82, 83, 83, 83, 84, 84, 84, 85,
 85, 85, 86, 86, 86, 87, 87, 87, 87, 88,
 88, 88, 89, 89, 89, 90, 90, 90, 90, 91,
 91, 91, 92, 92, 92, 93, 93, 93, 93, 94,
 94, 94, 95, 95, 95, 96, 96, 96, 96, 97,
 97, 97, 98, 98, 98, 99, 99, 99, 99, 100,
 100, 100, 101, 101, 101, 101, 102, 102, 102, 102,
 103, 103, 103, 103, 104, 104, 104, 104, 105, 105,
 105, 105, 106, 106, 106, 107, 107, 107, 107, 108,
 108, 108, 108, 109, 109, 109, 109, 110, 110, 110,
 110, 111, 111, 111, 111, 112, 112, 112, 112, 113,
 113, 113, 114, 114, 114, 114, 115, 115, 115, 115,
 116, 116, 116, 116, 117, 117, 117, 117, 118, 118,
 118, 118, 119, 119, 119, 120, 120, 120, 120, 121,
 121, 121, 121, 122, 122, 122, 122, 123, 123, 123,
 123, 124, 124, 124, 124, 125, 125, 125, 125, 126,
 126, 126, 126, 127, 127, 127, 127, 127, 128, 128,
 128, 128, 129, 129, 129, 129, 129, 130, 130, 130,
 130, 130, 131, 131, 131, 131, 131, 132, 132, 132,
 132, 133, 133, 133, 133, 133, 134, 134, 134, 134,
 134, 135, 135, 135, 135, 135, 136, 136, 136, 136,
 137, 137, 137, 137, 137, 138, 138, 138, 138, 138,
 139, 139, 139, 139, 139, 140, 140, 140, 140, 140,
 141, 141, 141, 141, 142, 142, 142, 142, 142, 143,
 143, 143, 143, 143, 144, 144, 144, 144, 144, 145,
 145, 145, 145, 146, 146, 146, 146, 146, 147, 147,
 147, 147, 147, 147, 147, 148, 148, 148, 148, 148,
 148, 148, 148, 149, 149, 149, 149, 149, 149, 149,
 149, 150, 150, 150, 150, 150, 150, 150, 150, 150,
 151, 151, 151, 151, 151, 151, 151, 151, 152, 152,
 152, 152, 152, 152, 152, 152, 153, 153, 153, 153,
 153, 153, 153, 153, 153, 154, 154, 154, 154, 154,
 154, 154, 154, 155, 155, 155, 155, 155, 155, 155,
 155, 156, 156, 156, 156, 156, 156, 156, 156, 156,
 157, 157, 157, 157, 157, 157, 157, 157, 158, 158,
 158, 158, 158, 158, 158, 158, 159, 159, 159, 159,
 159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
 159, 159, 159, 160, 160, 160, 160, 160, 160, 160,
 160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
 160, 160, 160, 160, 160, 160, 160, 160, 161, 161,
 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
 161, 161, 161, 162, 162, 162, 162, 162, 162, 162,
 162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
 162, 162, 162, 162, 162, 162, 162, 162, 163, 163,
 163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
 163};







 
 
  unsigned short TUSetpoint[] = { 
 800, 800, 800, 800, 800, 800, 800, 800, 800, 800,
 800, 800, 800, 800, 800, 800, 800, 800, 817, 833,
 850, 867, 883, 900, 917, 933, 950, 967, 983, 1000,
 1017, 1033, 1050, 1067, 1083, 1100, 1100, 1100, 1100, 1100,
 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
 1100, 1152, 1205, 1257, 1309, 1362, 1414, 1466, 1519, 1571,
 1623, 1676, 1728, 1780, 1833, 1885, 1937, 1990, 2042, 2094,
 2147, 2199, 2199, 2199, 2199, 2199, 2199, 2199, 2199, 2199,
 2199, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200,
 2200};


 
 

/* ********************   Charge Pressure Monitoring Curves  ******************/

 unsigned short ChargeLimp[] = { 
 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
 50, 51, 52, 53, 53, 54, 55, 56, 57, 58,
 58, 59, 60, 61, 62, 63, 63, 64, 65, 66,
 67, 68, 68, 69, 70, 71, 72, 73, 73, 74,
 75, 76, 77, 78, 78, 79, 80, 81, 82, 83,
 83, 84, 85, 86, 87, 88, 88, 89, 90, 91,
 92, 93, 93, 94, 95, 96, 97, 98, 98, 99,
 100, 101, 102, 103, 103, 104, 105, 106, 107, 108,
 108, 109, 110, 111, 112, 113, 113, 114, 115, 116,
 117, 118, 118, 119, 120, 121, 122, 123, 123, 124,
 125, 126, 127, 128, 128, 129, 130, 131, 132, 133,
 133, 134, 135, 136, 137, 138, 138, 139, 140, 141,
 142, 143, 143, 144, 145, 146, 147, 148, 148, 149,
 150, 151, 152, 153, 153, 154, 155, 156, 157, 158,
 158, 159, 160, 161, 162, 163, 163, 164, 165, 166,
 167, 168, 168, 169, 170, 171, 172, 173, 173, 174,
 175, 176, 177, 178, 178, 179, 180, 181, 182, 183,
 183, 184, 185, 186, 187, 188, 188, 189, 190, 191,
 192, 193, 193, 194, 195, 196, 197, 198, 198, 199,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
 200};

 unsigned short ChargeShutoff[] = { 
 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
 35, 35, 36, 36, 36, 37, 37, 38, 38, 38,
 39, 39, 39, 40, 40, 40, 41, 41, 42, 42,
 42, 43, 43, 43, 44, 44, 44, 45, 45, 45,
 46, 46, 47, 47, 47, 48, 48, 48, 49, 49,
 49, 50, 50, 51, 51, 51, 52, 52, 52, 53,
 53, 53, 54, 54, 55, 55, 55, 56, 56, 56,
 57, 57, 57, 58, 58, 58, 59, 59, 60, 60,
 60, 61, 61, 61, 62, 62, 62, 63, 63, 64,
 64, 64, 65, 65, 65, 66, 66, 66, 67, 67,
 68, 68, 68, 69, 69, 69, 70, 70, 70, 71,
 71, 71, 72, 72, 73, 73, 73, 74, 74, 74,
 75, 75, 75, 76, 76, 77, 77, 77, 78, 78,
 78, 79, 79, 79, 80, 80, 81, 81, 81, 82,
 82, 82, 83, 83, 83, 84, 84, 84, 85, 85,
 86, 86, 86, 87, 87, 87, 88, 88, 88, 89,
 89, 90, 90, 90, 91, 91, 91, 92, 92, 92,
 93, 93, 94, 94, 94, 95, 95, 95, 96, 96,
 96, 97, 97, 97, 98, 98, 99, 99, 99, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100};



// ****************************************************************************
// **                                                                        **
// ****************************** Field Space Parameters **********************
// **                                                                        **
// ****************************************************************************
// **  Settable to truck operators and field maintenance personel            **
// ****************************************************************************
#pragma  DATA_SEG FIELD_CAL_SPACE // Put this code in it's own Flash Sector   

/* **********************   RPM Reference Curve  ********************/  
 unsigned short RPMSetpoint[] = { 
   730, 800, 822, 844, 867, 889, 911, 933, 956, 978,
   1000, 1020, 1040, 1060, 1080, 1100, 1120, 1140, 1160, 1180,
   1200, 1218, 1236, 1255, 1273, 1291, 1309, 1327, 1345, 1364,
   1382, 1400, 1415, 1431, 1446, 1462, 1477, 1492, 1508, 1523,
   1538, 1554, 1569, 1585, 1600, 1614, 1629, 1643, 1657, 1671,
   1686, 1700, 1714, 1729, 1743, 1757, 1771, 1786, 1800, 1813,
   1825, 1838, 1850, 1863, 1875, 1888, 1900, 1913, 1925, 1938,
   1950, 1963, 1975, 1988, 2000, 2011, 2022, 2033, 2044, 2056,
   2067, 2078, 2089, 2100, 2111, 2122, 2133, 2144, 2156, 2167,
   2178, 2189, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200,
   2200};


 unsigned short LowIdle = 725;     // remember where low idle is  (used for TU)
 unsigned short HighIdle = 2300;   // remember where high idle is  (used for TU)
 
 unsigned short  MinPedal = 10;   // value of A/D when throttle pedal is fully up
 unsigned short  MaxPedal = 0;    // value of A/D when throttle pedal is floored


 unsigned short  MinHoist = 10;   // value of A/D when Hoist Lever is released
 unsigned short  MaxHoist = 0;    // value of A/D when Hoist Lever is fully back

 unsigned short  MinRack = 10;    // value of A/D when Rack is at Idle
 unsigned short  MaxRack = 0;     // value of A/D when Rack is at HighIdle  

 
 // Power Adapt Gains  
 unsigned short  paKpConst = 30;   // Power Adapt PID routine Proportional Gain
 unsigned short  paKiConst = 2;    // Power Adapt PID routines Integral Gain

 // Ramp speeds
 unsigned short  filteredRPM_SP_IncConst = 6;     //(was 5=1250) ramp rate of filteredRPM_SP, used in power adapt and accel ref overspeed


 // Throttle-Up Parameters
 unsigned short tKpConst = 3;      // Throttle Motor RPM Control routine Proportional Gain
 unsigned short tKiConst = 0;      // Throttle Motor RPM Control routine Integral Gain
 unsigned short tKFFConst = 70;    // Throttle Motor RPM Control routine FeedForward Gain
 unsigned short TiltSPConst = 1400; // Tilt & Auxilliary Function RPM Setpoint
 unsigned short Throttle_SPIncConst = 10; // 500 RPM/sec ramp rate of RPM Setpoint

  
// ****************************************************************************
// **                                                                        **
// *************************** Non Configurable Parameters ********************
// **                                                                        **
// ****************************************************************************
// ** The following parameters are NOT CONFIGURABLE WITHOUT RECOMPILING CODE **
// ****************************************************************************
#pragma  DATA_SEG DEFAULT            // End of Downloadable Parameter Section


